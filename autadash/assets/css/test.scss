$shape-size: 80px;
$distance: 3px;
$blur: 5px;
$intensity: 10%;
$bg-color: #ddeef7;// #ddeef7 #003856
$navbar-color: $bg-color;

@mixin neumorphism($distance, $blur, $intensity, $inset: false, $shape: flat, $color: $bg-color) {
    $light-color: lighten($color, $intensity);
    $dark-color: darken($color, $intensity);
    @if $shape == concave {
        background: linear-gradient(to bottom right, $light-color, $dark-color);
    } @else if $shape == convex {
        background: linear-gradient(to top left, $light-color, $dark-color);
    } @else {
        background: $color;
    }
    box-shadow:
        $distance $distance $blur $dark-color if($inset, inset, null),
        -#{$distance} -#{$distance} $blur $light-color if($inset, inset, null);
}

html {
    background-color: $bg-color;
}

::-webkit-scrollbar {
    @include neumorphism($distance, $blur, $intensity, true, flat, $bg-color);
    border-radius: 50px;
}

::-webkit-scrollbar-thumb {
    @include neumorphism($distance, $blur, $intensity, false, convex, $bg-color);
    border-radius: 50px;
}

* {
    box-sizing: border-box;
    scroll-behavior: smooth;
    padding: 0;
    margin: 0;
}

// base structure page
.wrapper {
    width: 100px;
    min-height: 100vh;
    background: $bg-color;
    display: grid;
    align-items: center;
    justify-items: center;
    position: absolute;
}

nav {
    z-index: 100;
    width: 64px;
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 0;
    border-radius: 40px;
    position: relative;
    @include neumorphism($distance, $blur, $intensity, false, convex, $navbar-color);
    color: invert($bg-color);

    .home {
        $H: 1.3;
        height: 50px * $H;
        font-size: 25px;
        margin-bottom: 7px * $H;
        // background-color: invert($navbar-color);
        // color: $navbar-color;
        // filter: drop-shadow(0 0 5px invert($navbar-color));
        @include neumorphism($distance, $blur, $intensity, false, flat, $navbar-color);

        &:hover {
            @include neumorphism($distance, $blur, $intensity, true, convex, $navbar-color);
            color: invert($navbar-color);
            filter: none;

            &:active {
                @include neumorphism($distance, $blur, $intensity * 2, true, convex, $navbar-color);
                svg {
                    opacity: 75%;
                }
            }

            > * {
                font-size: 25px - 2px;

                svg {
                    transform: translateX(-(50px - (25px - 2px))/2);
                }
            }
        }

        svg {
            transform: translateX(-(50px-25px)/2);
        }
    }

    > * {
        width: 50px;
        height: 50px;
        cursor: pointer;
        display: inline-flex;
        align-items: center;
        justify-content: flex-end;
        font-size: 21px;
        border-radius: 45px;
        margin: 7px;
        color: invert($navbar-color);

        &:hover {
            @include neumorphism($distance, $blur, $intensity, true, concave, $navbar-color);

            &:active {
                @include neumorphism($distance, $blur, $intensity, true, convex, $navbar-color);
                svg {
                    opacity: 75%;
                }
            }

            > * {
                font-size: 21px - 1px;

                svg {
                    transform: translateX(-(50px - (21px - 1px))/2);
                }
            }
        }

        svg {
            display: inline-block;
            width: 1em;
            height: 1em;
            stroke-width: 0;
            stroke: currentColor;
            fill: currentColor;
            transform: translateX(-(50px-21px)/2);
        }
    }
}

//  footer test

@import url("https://fonts.googleapis.com/css?family=IBM%20Plex%20Sans:500|IBM%20Plex%20Sans:300");

:root {
    --m: 4rem;
}

main {
    width: calc(100vw - 100px);
    overflow-x: hidden;
    border-radius: 15px;
    transform: translateX(100px)
}

.foot {
    // background-color: black;
    @include neumorphism($distance, $blur, $intensity, true, flat, $bg-color);
    color: white;
    font-family: "IBM Plex Sans";
    font-weight: 300;

    display: flex;
    flex-direction: column;

    align-items: center;
    height: 180vh;
    margin: 0;
    color: #d5d5d5;
    font-size: calc(0.3 * var(--m));
}

h2 {
    font-weight: 500;
    text-align: center;
    font-size: var(--m);
    margin: 0;
}

h3 {
    font-weight: 500;
    font-size: calc(0.6 * var(--m));
    margin: 0;
}

.card {
    height: calc(8 * var(--m));
    width: calc(12 * var(--m));
    // background: linear-gradient(120deg, #ff8064, #725bdc);
    @include neumorphism($distance, $blur, $intensity, false, flat);
    color: invert($bg-color);
    border-radius: calc(0.5 * var(--m));

    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: var(--m);

    position: fixed;
    margin: calc(2 * var(--m)) calc(5 * var(--m)) calc(5 * var(--m)) calc(5 * var(--m));
        
    > a {
        @include neumorphism($distance, $blur, $intensity, false, flat);
        font-size: calc(0.4 * var(--m));
        border: none;
        // color: #e5e5e5;
        color: invert($bg-color);
        font-family: "IBM Plex Sans";
        font-weight: 400;
        padding: calc(0.35 * var(--m)) calc(0.8 * var(--m));
        border-radius: calc(0.3 * var(--m));

        &:active {
            @include neumorphism($distance, $blur, $intensity, false, convex);
            opacity: 75%;
        }
    }
}


footer {
    margin-top: 80vh;
    z-index: 500;
    width: 100%;
    height: 100vh;

    display: flex;
    flex-direction: row;
    justify-content: space-evenly;
    align-items: flex-end;
    padding: 5rem 2vw;
    position: relative;
}

footer::before {
    content: "";
    position: absolute;
    inset: 0;
    background: linear-gradient(
        rgba($bg-color, 0) 5%,
        rgba($bg-color, 0.3) 20%,
        rgba($bg-color, 0.6) 30%,
        rgba($bg-color, 0.8) 40%,
        rgba($bg-color, 1) 50%,
        $bg-color
    );
    z-index: -7;
}

.backdrop {
    z-index: -5;
    position: absolute;
    inset: 0;

    backdrop-filter: blur(40px);
    -webkit-backdrop-filter: blur(40px);

    mask-image: linear-gradient(
        rgba(0, 0, 0, 0),
        rgba(0, 0, 0, 0.5) 10%,
        rgba(0, 0, 0, 0.8) 20%,
        rgba(0, 0, 0, 1) 30%,
        rgb(0, 0, 0)
    );

    -webkit-mask-image: linear-gradient(
        rgba(0, 0, 0, 0),
        rgba(0, 0, 0, 0.5) 10%,
        rgba(0, 0, 0, 0.8) 20%,
        rgba(0, 0, 0, 1) 30%,
        rgb(0, 0, 0)
    );
}

.col {
    flex-direction: column;
    align-items: flex-start;
    justify-content: flex-start;
    padding: calc(0.3 * var(--m)) calc(0.8 * var(--m));
    width: 28%;
}

.col2,
.col3 {
    // background-color: #121212;
    @include neumorphism($distance, $blur, $intensity, false, convex, rgba(invert($bg-color), 0.5));
    border-radius: calc(0.5 * var(--m));
}

img {
    height: calc(0.3 * var(--m));
    object-fit: cover;
}

.social {
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    gap: 1rem;
}

a {
    text-decoration: none;
    color: inherit;
}

.link {
    width: calc(0.8 * var(--m));
    height: calc(0.8 * var(--m));
    background-color: rgba(invert($bg-color), 0.1);
    border-radius: calc(0.1 * var(--m));

    display: flex;
    justify-content: center;
    align-items: center;
}

@media screen and (max-width: 1000px) {
    :root {
        --m: 3rem;
    }
}

@media screen and (max-width: 700px) {
    footer {
        flex-direction: column;
        padding: 5rem 20vw;
    }
    .col {
        width: 100%;
    }
}

z {
--c0: #71a1ff;
--c1: #4d85f6;
--c2: #3b72e2;
--c3: #336de2;
--c4: #2151af;
--c5: #244483;
--c6: #111;}